package org.example;

import java.util.ArrayList;
import java.util.List;

interface arup{
    int add(int a,int b);
}
@FunctionalInterface
    interface Sayable{
    String say(String message);

}

public class LambdaExpression2 {
    public static void main(String[] args) {

        //Labbdha expression wihtout return keyword
        arup a1=(a,b)->(a+b);
        System.out.println("Expression without Return keyword: ");
        System.out.println(a1.add(10,20));

        //Lambdha expression with return keyword
        arup a2=(int a,int b)->{
            return (a+b);
        };
        System.out.println("Expression with Return keyword: ");
        System.out.println(a2.add(100,200));

        //foreach loop
        List<String> list=new ArrayList<String>();
        list.add("Arup");
        list.add("Chakra");
        list.add("borty");

        list.forEach(
                (n)-> System.out.println(n)
        );

        //you can pass multiple statements in lambda expression
        Sayable person=(message)->{
          String str1="I would like to say,";
          String str2= str1 + message;
          return str2;
        };
        System.out.println(person.say("time is precious"));
    }
}
